service: visual-knight-platform

provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 512
  timeout: 20
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-central-1'}
  profile: ${env:AWS_PROFILE_VISUAL_KNIGHT_PLATFORM}
  apiGateway:
    minimumCompressionSize: 1024
  tracing:
    apiGateway: true
    lambda: true
  environment: ${file(./config/env.yml)}

plugins:
  - serverless-offline

package:
  individually: true

functions:
  webapp:
    handler: apps/backend-webapp/dist/index.handler
    package:
      artifact: apps/backend-webapp/dist/webapp.zip

    events:
      - http:
          method: any
          path: /webapp

  comparison:
    handler: apps/backend-comparison/dist/index.handler
    package:
      artifact: apps/backend-comparison/dist/comparison.zip

    events:
      - http:
          cors: true
          method: any
          path: /comparison
      - http:
          cors: true
          path: '/comparison/{proxy+}'
          method: any

  processTestsessionImage:
    handler: apps/lambdas/dist/processTestsessionImage.handler
    package:
      artifact: apps/lambdas/dist/processTestsessionImage.zip
    events:
      - s3:
          bucket: visual-knight-platform-photos
          event: s3:ObjectCreated:*
          rules:
            - suffix: .screenshot.png

    environment:
      threshold: 12
      includeAA: true
      imageBucketName: 'visual-knight-images'

  invokeTestsession:
    handler: apps/lambdas/dist/invokeTestsession.handler
    package:
      artifact: apps/lambdas/dist/invokeTestsession.zip

    events:
      - http:
          path: /invokeTestsession
          method: post
          cors: true
          integration: lambda-proxy
      - http:
          path: /invokeTestsession
          method: get
          cors: true
          integration: lambda-proxy

    environment:
      threshold: 12
      includeAA: true
      imageBucketName: 'visual-knight-images'

  getTestsessionStatus:
    handler: apps/lambdas/dist/getTestsessionStatus.handler
    package:
      artifact: apps/lambdas/dist/getTestsessionStatus.zip

    events:
      - http:
          path: /getTestsessionStatus
          method: get
          cors: true
          integration: lambda-proxy

    environment:
      app_url: ${env:APP_URL}
